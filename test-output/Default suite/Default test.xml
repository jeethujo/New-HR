<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="JJ" failures="0" tests="4" name="Default test" time="0.898" errors="0" timestamp="2022-05-24T05:54:14 EDT">
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="0.055">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: &amp;apos;4.1.0&amp;apos;, revision: &amp;apos;87802e897b&amp;apos;
System info: host: &amp;apos;JJ&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.1&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: '4.1.0', revision: '87802e897b'
System info: host: 'JJ', ip: '192.168.1.3', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:95)
at java.base/java.util.Optional.orElseGet(Optional.java:364)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:189)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.withOptions(GeckoDriverService.java:179)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:232)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:186)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:164)
at BasePackage.BaseHRMClass.initiation(BaseHRMClass.java:48)
at testLayer.LoginTest.initsetup(LoginTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653386053348E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.653386054103E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653386054114E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.653386054121E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653386054131E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.653386054134E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653386054141E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="Title" time="0.0">
    <skipped/>
  </testcase> <!-- Title -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
</testsuite> <!-- Default test -->
