<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="JJ" failures="0" tests="4" name="TestNG" time="0.794" errors="0" timestamp="2022-05-24T11:05:21 EDT">
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="0.051">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: &amp;apos;4.1.0&amp;apos;, revision: &amp;apos;87802e897b&amp;apos;
System info: host: &amp;apos;JJ&amp;apos;, ip: &amp;apos;192.168.1.2&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.1&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: '4.1.0', revision: '87802e897b'
System info: host: 'JJ', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:95)
at java.base/java.util.Optional.orElseGet(Optional.java:364)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:189)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.withOptions(GeckoDriverService.java:179)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:232)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:186)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:164)
at BasePackage.BaseHRMClass.initiation(BaseHRMClass.java:48)
at testLayer.LoginTest.initsetup(LoginTest.java:24)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653404721042E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.653404721724E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653404721729E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.65340472173E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653404721734E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initsetup" time="-1.653404721735E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initsetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="-1.653404721739E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="Title" time="0.0">
    <skipped/>
  </testcase> <!-- Title -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
</testsuite> <!-- TestNG -->
